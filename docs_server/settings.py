"""
Django settings for docs_server project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os, logging, graypy
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'in23z811=&&)(ssg8ry#(bo0swtk1ziu68gs6_x$*+$$*31g%!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'docs_server',
    'doc_viewer',
    'django_extensions',
    #'django_requestlogging',
    #'request',
    #'django_request_logging',
    'local_request_logging',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    #'django_requestlogging.middleware.LogSetupMiddleware',
    'local_request_logging.middleware.LoggingMiddleware',
    #'request.middleware.RequestMiddleware',
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
]

ROOT_URLCONF = 'docs_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'docs_server', 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'docs_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'


#LOGGING = {
#    'version':1,
#    'disable_existing_loggers':False,
#
#    'handlers':{
#        'gelf':{
#            'class':'graypy.GELFHandler',
#            'host':'192.168.1.37',
#            'port':'12245',
#            },
#        },
#    'loggers':{
#        'docs_server':{
#            'handlers':['gelf'],
#            'level':'DEBUG',
#            },
#        },
#    }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'filters':{
        'request': {
            '()': 'django_requestlogging.logging_filters.RequestFilter',
            },
        },
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s]- %(message)s',
        },
        'request_format': {
            'format': '%(asctime)s [%(levelname)s]- %(message)s',
            },
        },
    'handlers': {
        'gelf':{
            'class':'graypy.GELFHandler',
            'host':'192.168.1.37',
            'port':'12245',
            #'filters': ['request'],
            },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            #'formatter': 'standard',
            'formatter': 'request_format',

        },
    },
    'loggers': {
        #'info': {
        #    'handlers': ['console', 'gelf'],
        #    'level': 'DEBUG',
        #    'propagate': True,
        #},
        #'django': {
        #    'handlers': ['gelf'],
        #    'level': 'DEBUG',
        #    'propagate': True,
        #},
        #'django.server': {
        #    'handlers': ['gelf'],
        #    'level': 'INFO',
        #    'propagate': True,
        #},
        'django.request': {
            'handlers': ['gelf'],
            'level': 'DEBUG',
            'propagate': True,
        },
        #'django.db.backends': {
        #    'handlers': ['gelf','console'],
        #    'level': 'ERROR',
        #    'propagate': True,
        #},
        #'views_logger':{
        #    'handlers':['gelf'],
        #    'level':'INFO',
            #'filters':['request'],
        #},
    },
}
